name: AWS Credentials

env:
  AWS_REGION: "eu-west-2"
  AWS_ACCOUNT_ID_DEV: "654654324108"
  AWS_ACCOUNT_ID_PROD: "1234567890"
  ROLE_DEV: "DevAdminRole"
  ROLE_PROD: "ProdAdminRole"
  TF_VERSION: "1.9.5"

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    inputs:
      STAGE:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      VERSION_NUMBER:
        required: true
        type: string

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Assume Role
        env:
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ROLE: ${{ inputs.STAGE == 'dev' && env.ROLE_DEV || env.ROLE_PROD }}
          AWS_ACCOUNT_ID: ${{ inputs.STAGE == 'dev' && env.AWS_ACCOUNT_ID_DEV || env.AWS_ACCOUNT_ID_PROD }}
        run: |
          output=$(aws sts assume-role --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$ROLE --role-session-name MySession)
          echo "AWS_ACCESS_KEY_ID=$(echo $output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Apply Terraform
        env:
          AWS_ACCOUNT_ID: ${{ inputs.STAGE == 'dev' && env.AWS_ACCOUNT_ID_DEV || env.AWS_ACCOUNT_ID_PROD }}
          AWS_REGION: ${{ env.AWS_REGION }}
          STAGE: ${{ inputs.STAGE }}
          PROJECT: ${{ inputs.PROJECT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          VERSION_NUMBER: ${{ inputs.VERSION_NUMBER }}
        run: |
          cd infra
          terraform fmt -check
          terraform init -backend-config=backend/backend_config_dev.tfvars
          terraform plan -no-color \
            -var "aws_account_id=$AWS_ACCOUNT_ID" \
            -var "aws_region=$AWS_REGION" \
            -var "stage=$STAGE" \
            -var "project=$PROJECT" \
            -var "aws_access_key_id_admin=$AWS_ACCESS_KEY_ID" \
            -var "aws_secret_access_key_admin=$AWS_SECRET_ACCESS_KEY" \
            -var "version_number=$VERSION_NUMBER"
          terraform apply -auto-approve \
            -var "aws_account_id=$AWS_ACCOUNT_ID" \
            -var "aws_region=$AWS_REGION" \
            -var "stage=$STAGE" \
            -var "project=$PROJECT" \
            -var "aws_access_key_id_admin=$AWS_ACCESS_KEY_ID" \
            -var "aws_secret_access_key_admin=$AWS_SECRET_ACCESS_KEY" \
            -var "version_number=$VERSION_NUMBER"
